name: .NET Release

on:
  push:
    branches:
      - main  # Ana branch'e push yapƒ±ldƒ±ƒüƒ±nda √ßalƒ±≈üƒ±r.
  workflow_dispatch:  # Manuel olarak √ßalƒ±≈ütƒ±rabilmek i√ßin.

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üöÄ Repository‚Äôyi Kopyala
        uses: actions/checkout@v3

      - name: üõ†Ô∏è .NET SDK‚Äôyƒ± Kur
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: üì¶ Baƒüƒ±mlƒ±lƒ±klarƒ± Y√ºkle
        run: dotnet restore

      - name: üî® Projeyi Derle
        run: dotnet build --configuration Release --no-restore

      - name: üì¶ Yayƒ±nlanabilir Dosyalarƒ± Olu≈ütur
        run: dotnet publish -c Release -r win-x64 --self-contained true -o publish

      - name: üìÇ "mpv" Klas√∂r√ºn√º Olu≈ütur
        run: mkdir publish\mpv

      - name: üåç mpv.net Portable S√ºr√ºm√ºn√º ƒ∞ndir
        run: |
          $url = "https://api.github.com/repos/mpvnet-player/mpv.net/releases/latest"
          $latest = Invoke-RestMethod -Uri $url
          $downloadUrl = ($latest.assets | Where-Object { $_.name -match "portable.*zip" }).browser_download_url
          Invoke-WebRequest -Uri $downloadUrl -OutFile mpv.zip

      - name: üìÇ mpv.net ZIP ƒ∞√ßeriƒüini √áƒ±kar
        run: Expand-Archive -Path mpv.zip -DestinationPath publish\mpv

      - name: üóúÔ∏è Derleme ve "mpv" Klas√∂r√ºn√º 7z ile Ar≈üivle
        run: |
          choco install -y 7zip  # 7-Zip'i y√ºkle
          7z a release.7z publish\*

      - name: üè∑Ô∏è Versiyon Numarasƒ± Al
        id: version
        run: echo "VERSION=$(date +'%Y.%m.%d-%H%M%S')" >> $GITHUB_ENV

      - name: üöÄ GitHub Releases'a Y√ºkle
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: "S√ºr√ºm ${{ env.VERSION }}"
          body: "Otomatik olu≈üturulan s√ºr√ºm."
          draft: false
          prerelease: false
          files: release.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
